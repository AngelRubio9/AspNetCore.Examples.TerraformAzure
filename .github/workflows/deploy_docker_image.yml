name: Deploy Docker Image

on:
  # Call from other workflows
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      artifact_name:
        required: true
        type: string
      image_name:
        required: true
        type: string
      
permissions:
  # Only allow to read repo content
  contents: read
  # Allow to write tokens for Azure Login OIDC
  id-token: write

jobs:
  deploy:
    name: Deploy Docker Image
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
   
    steps:

    - name: Download artifact from build job
      uses: actions/download-artifact@v1
      with:
        name: ${{ inputs.artifact_name }}
        path: ./${{ inputs.artifact_name }}

    - name: Extract and re-tag Docker image
      run: |
        docker load -i ./${{ inputs.artifact_name }}/${{ inputs.image_name }}.tar
        docker image tag ${{ inputs.image_name }} ${{ vars.AZ_CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ inputs.image_name }}:${{ github.sha }}
        docker image tag ${{ inputs.image_name }} ${{ vars.AZ_CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ inputs.image_name }}:latest
        docker rmi ${{ inputs.image_name }}

    # Azure Login using service principal with OIDC
    # https://github.com/marketplace/actions/azure-login#login-with-openid-connect-oidc-recommended
    - name: Azure login
      uses: azure/login@v2
      with:
        subscription-id: ${{ vars.AZ_SUBSCRIPTION_ID }}
        tenant-id: ${{ vars.AZ_TENANT_ID }}
        client-id: ${{ vars.AZ_SERVICE_PRINCIPAL_APP_ID }}

    - name: Login to ACR
      run: az acr login --name ${{ vars.AZ_CONTAINER_REGISTRY_NAME }}

    - name: Push image to ACR
      run: |
        docker push ${{ vars.AZ_CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ inputs.image_name }} --all-tags
