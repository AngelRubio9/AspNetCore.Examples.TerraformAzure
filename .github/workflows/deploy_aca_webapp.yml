name: Deploy ACA Web App

on:
  # Call from other workflows
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      image_name:
        required: true
        type: string

permissions:
  # Only allow to read repo content
  contents: read
  # Allow to write tokens for Azure Login OIDC
  id-token: write

jobs:
  deploy:
    name: Deploy ACA Web App
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
   
    steps:

    # Azure Login using service principal with OIDC
    # https://github.com/marketplace/actions/azure-login#login-with-openid-connect-oidc-recommended
    - name: Azure login
      uses: azure/login@v2
      with:
        subscription-id: ${{ vars.AZ_SUBSCRIPTION_ID }}
        tenant-id: ${{ vars.AZ_TENANT_ID }}
        client-id: ${{ vars.AZ_SERVICE_PRINCIPAL_APP_ID }}
    
    - name: 'Deploy to Azure'
      uses: azure/container-apps-deploy-action@v1
      with:
        resourceGroup: ${{ vars.AZ_RESOURCE_GROUP_NAME }}
        containerAppEnvironment: ${{ vars.AZ_CONTAINER_APP_ENV_NAME }}
        containerAppName: ${{ vars.AZ_CONTAINER_APP_NAME }}
        acrName: ${{ vars.AZ_CONTAINER_REGISTRY_NAME }}
        imageToDeploy: '${{ vars.AZ_CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ inputs.image_name }}:${{ github.sha }}'
        ingress: external
        targetPort: 8080

    - name: Get container app URL
      id: get_aca_url
      uses: azure/CLI@v1
      with:
        azcliversion: 2.30.0
        inlineScript: |
          url=`az containerapp show --resource-group ${{ vars.AZ_RESOURCE_GROUP_NAME }} --name ${{ vars.AZ_CONTAINER_APP_NAME }} --query properties.configuration.ingress.fqdn`
          echo "url=$url" >> $GITHUB_OUTPUT

    - name: Smoke Test
      run: |
        accepted_status=200
        max_attempts=3
        
        status=0
        attempts=0
        while true; do
            status=`curl --silent --head -X GET --max-time 300 https://${{ steps.get_aca_url.outputs.url }} | head --lines 1 | cut --fields 2 --delimiter ' '`
            attempts=$((attempts + 1))
            echo Completed attempt $attempts with status $status
            if [[( $status -eq $accepted_status) || ($attempts -eq $max_attempts)]]
            then break
            fi
        done

        if [[ $status -ne $accepted_status ]]
        then
            echo Smoke test failed with status code $status.
            exit -1
        else
            echo Smoke test successful with status code $status.
            exit 0
        fi
